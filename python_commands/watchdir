#!/usr/bin/env python3

import sys
import os
import time
import atexit
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class MyHandler(FileSystemEventHandler):
    def on_created(self, event):
        print(f'New file {event.src_path} has been created')

def on_exit(observer):
    print('Service is stopping...')
    observer.stop()

if __name__ == "__main__":
    if len(sys.argv) < 2 or not os.path.isdir(sys.argv[1]):
        print('Please provide a valid directory as a parameter')
        sys.exit(1)

    path = sys.argv[1]
    event_handler = MyHandler()
    observer = Observer()
    observer.schedule(event_handler, path, recursive=True)
    observer.start()

    atexit.register(on_exit, observer)

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print('Ctrl+C has been pressed, stopping the service...')
        observer.stop()
    except Exception as e:
        print(f'An error occurred: {e}')
        observer.stop()
    observer.join()
