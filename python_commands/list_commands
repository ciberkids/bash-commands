#!/usr/bin/env python3

import os
import sys
import argparse
from tabulate import tabulate
from sh import Command

# List of directories to exclude
EXCLUDED_DIRS = ['.git']

def list_commands(root_dir, debug=False):
    commands = []
    for dirpath, dirnames, filenames in os.walk(root_dir):
        # Skip excluded directories
        if any(excluded_dir in dirpath for excluded_dir in EXCLUDED_DIRS):
            continue
        if debug:
            print(f"Entering directory: {dirpath}")
        for filename in filenames:
            if not filename.startswith('.') and os.access(os.path.join(dirpath, filename), os.X_OK):
                if debug:
                    print(f"Found executable file: {filename}")
                try:
                    cmd = Command(os.path.join(dirpath, filename))
                    description = cmd('--describe').strip()
                    commands.append((filename, description))
                    if debug:
                        print(f"Got description for {filename}: {description}")
                except Exception as e:
                    print(f"Error: failed to get description for {filename}: {e}", file=sys.stderr)
    print(tabulate(commands, headers=['Command', 'Description']))

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='This command lists all available commands and their descriptions.')
    parser.add_argument('--debug', action='store_true', help='Enable debug output')
    parser.add_argument('--describe', action='store_true', help='Describe this command')
    args = parser.parse_args()

    if args.debug:
        print("Debug mode is activated")

    if args.describe:
        print('This command lists all available commands and their descriptions.')
    else:
        list_commands('/home/matteo/usr/local/bin/', args.debug)
